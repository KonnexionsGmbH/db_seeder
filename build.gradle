plugins {
    id 'java'
}

compileJava.options.encoding = 'UTF-8'
group 'ch.konnexions'
version '2.9.1'

repositories {
    mavenCentral()
    maven { 
        url 'https://jitpack.io' 
    }
    maven {
        url "http://maven.cubrid.org"
        allowInsecureProtocol = true
    }
}

dependencies {
    implementation 'com.github.everit-org.json-schema:org.everit.json.schema:1.12.2'
    implementation 'com.google.code.gson:gson:2.8.7'
    implementation 'commons-beanutils:commons-beanutils:1.9.4'
    implementation 'commons-io:commons-io:2.9.0'
    implementation 'io.crate:crate-jdbc:2.6.0'
    implementation 'org.apache.commons:commons-configuration2:2.7'
    implementation 'org.apache.commons:commons-csv:1.8'
    implementation 'org.apache.derby:derbyclient:10.15.2.0'
    implementation 'org.firebirdsql.jdbc:jaybird:4.0.3.java11'
    implementation 'org.slf4j:slf4j-log4j12:1.7.30'
    implementation 'org.xerial:sqlite-jdbc:3.34.0'
}

jar {
    archivesBaseName = project.name
    duplicatesStrategy = DuplicatesStrategy.INCLUDE

    manifest {
        attributes 'Main-Class' : 'ch.konnexions.db_seeder.CreateSummaryFile'
        attributes 'Main-Class' : 'ch.konnexions.db_seeder.DatabaseSeeder'
        attributes 'Main-Class' : 'ch.konnexions.db_seeder.TrinoEnvironment'
        attributes 'Main-Class' : 'ch.konnexions.db_seeder.SchemaBuilder'
    }
}

task fatJar(type: Jar) {
    group = "Konnexions"
    description = 'Create a jar file including all dependencies'
    duplicatesStrategy = DuplicatesStrategy.INCLUDE // allow duplicates

    manifest.from jar.manifest
    archiveClassifier.set("all")
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}

task copyJarToLib(type: Copy, dependsOn: 'fatJar') {
    group = "Konnexions"
    description = 'Create the jar file and copy it to the lib directory'

    from "$buildDir/libs"
    rename project.name + '-' + version + '-all.jar', project.name + '.jar'
    into "lib"
}

tasks.withType(JavaCompile).each {
    it.options.compilerArgs.add('-deprecation')
}
